IPS=$(curl -s https://www.cloudflare.com/ips-v4)
IPS=$(echo $IPS; curl -s https://www.cloudflare.com/ips-v6)

OUTPUT_GO_CONFIG="./ips/ips.go"
OUTPUT_GO_CONFIG_OLD="./ips/ips.tmp.go"

mv $OUTPUT_GO_CONFIG $OUTPUT_GO_CONFIG_OLD

cat >> $OUTPUT_GO_CONFIG << EOF
// WARNING
// Do not edit this file by hand! It is automatically generated by a script.

// Package ips contains a list of current Cloudflare IP ranges
package ips

// CFIPs is the Cloudflare server IP list (this is checked on build).
func CFIPs() []string {
	return []string{
EOF

for ip in ${IPS}; do
	printf '%s\n' "Cloudflare IP: $ip"
	echo "		\"${ip}\"," >> $OUTPUT_GO_CONFIG
done

cat >> $OUTPUT_GO_CONFIG << EOF
	}
}
EOF

if [ "${1}" == "pc" ]; then
	echo "Run on pre-commit hook."
	if cmp --silent -- "$OUTPUT_GO_CONFIG" "$OUTPUT_GO_CONFIG_OLD"; then
		echo "No changes, nothing to worry about"
	else
		echo "Cloudflare has changed their IPs, adding changes to commit."
		touch ./.commit
	fi

	[ -f "$OUTPUT_GO_CONFIG_OLD" ] && rm "$OUTPUT_GO_CONFIG_OLD"
	exit
fi

if [ "${1}" != "ci" ]; then
	echo "Not run on CI, exit ok"
	[ -f "$OUTPUT_GO_CONFIG_OLD" ] && rm "$OUTPUT_GO_CONFIG_OLD"
	exit
fi

if cmp --silent -- "$OUTPUT_GO_CONFIG" "$OUTPUT_GO_CONFIG_OLD"; then
	echo "No changes to Cloudflare IP list"
	[ -f "$OUTPUT_GO_CONFIG_OLD" ] && rm "$OUTPUT_GO_CONFIG_OLD"
else
	echo "Cloudflare has changed their IPs, re-run updateCFIps.sh and commit the changes!"
	[ -f "$OUTPUT_GO_CONFIG_OLD" ] && rm "$OUTPUT_GO_CONFIG_OLD"
	exit 6
fi
